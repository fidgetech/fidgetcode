// NOTE: teachers get full access to everything except other teacher accounts

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      // allow teachers full access to everything (TO DO: prevent access to other teacher accounts)
      allow read, write: if request.auth.token.role == 'teacher';
    }

    match /teachers/{userId} {
      // allow teachers to read & update only their own teacher account
      allow read, update: if request.auth.uid == userId;
      allow create, delete: if false;
    }

    match /students/{userId} {
      allow read, write: if request.auth.token.role == 'teacher';
    	// allow students to read only their account, no write
      allow read: if request.auth.uid == userId;
      allow write: if false;

      match /assignments/{assignmentId} {
        allow read, write: if request.auth.token.role == 'teacher';
        // allow students to read their own assignments, no write
        allow read: if request.auth.uid == userId;
        allow write: if false;

        match /submissions/{submissionId} {
          allow read, write: if request.auth.token.role == 'teacher';
          function requiredKeys() { return ['createdAt', 'studentId', 'assignmentId', 'url'] }
          function optionalKeys() { return ['note'] }
          // Allow students to read their own submissions, no write
          allow read: if request.auth.uid == resource.data.studentId;
          allow update, delete: if false;
          allow create: if 
            request.resource.data.keys().hasAll(requiredKeys()) && 
            request.resource.data.keys().hasOnly(requiredKeys().concat(optionalKeys())) && 
            request.resource.data.studentId == request.auth.uid && 
            request.resource.data.assignmentId == assignmentId && 
            request.resource.data.url is string && 
            request.resource.data.url.size() > 0;
        }
      }
    }

    match /tracks/{trackId} {
    	// allow students to read their track, no write
      allow read: if request.auth.token.trackId == trackId;
      allow write: if false;

      match /courses/{courseId} {
      	// allow students to read their courses, no write
        allow read, write: if request.auth.token.role == 'teacher';
        allow read: if request.auth.token.trackId == trackId;
        allow write: if false;

        match /assignmentTemplates/{assignmentTemplateId} {
          allow read, write: if request.auth.token.role == 'teacher';
        	// allow student to read template for assignments they were assigned, no write
          // relies on assignment IDs matching assignment template ID
          // allow read: if exists(/databases/$(database)/documents/students/$(request.auth.uid)/assignments/$(assignmentTemplateId));
          allow read: if false;
          allow write: if false;
        }
      }
    }
  }
}
